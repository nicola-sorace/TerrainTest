[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Window

const SLOT = preload(\"res://gui/ItemSlot.tscn\")
const W = 4  # Number of slots per row

var obj = null
var inventory = {}
var inv_len = 0

var slots = []

func load_inventory(obj):
	game.hud.play_sound(\"BagOpen\")
	self.obj = obj
	source = obj
	inventory = obj.inventory
	inv_len = obj.inv_len
	
	if obj != game.player:
		set_title(obj.title)
	
	for i in range(obj.inv_len):
		var slot = SLOT.instance()
		slot._ready()
		slot.set_position(Vector2(10+70*(i-floor(i/W)*W), 10+70*floor(i/W)))
		slot.set_item(obj, inventory, i)
		add_child(slot)
		slots.append(slot)
	
	set_size(Vector2(W*70+10, ceil(obj.inv_len/float(W))*70+10))
	if obj != game.player:
		set_position(get_viewport().get_mouse_position())
	
	obj.connect(\"inventory_changed\", self, \"update\")

func update():
	for slot in slots:
		slot.update_item()

func close():
	obj.inv_view = null
	.close()"

[node name="Inventory" type="WindowDialog"]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -390.0
margin_top = -470.0
margin_right = -100.0
margin_bottom = -100.0
focus_mode = 2
window_title = "Inventory"
script = SubResource( 1 )

